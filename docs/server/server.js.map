{"version":3,"sources":["../../src/server/server.js"],"names":["express","require","cookieParser","userRoutes","posterRoutes","path","app","APP_PORT","process","env","checkUser","requireAuth","use","static","resolve","__dirname","json","urlencoded","extended","get","req","res","status","send","locals","user","_id","listen","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,sBAAD,CAA1B;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,wBAAD,CAA5B;;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMK,GAAG,GAAGN,OAAO,EAAnB;AACA,MAAM;AAACO,EAAAA;AAAD,IAAaC,OAAO,CAACC,GAA3B;;AACA,MAAM;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,IAA2BV,OAAO,CAAC,8BAAD,CAAxC;;AACAA,OAAO,CAAC,aAAD,CAAP;;AACAK,GAAG,CAACM,GAAJ,CAAQZ,OAAO,CAACa,MAAR,CAAeR,IAAI,CAACS,OAAL,CAAaC,SAAb,EAAwB,kBAAxB,CAAf,CAAR;AACAT,GAAG,CAACM,GAAJ,CAAQ,UAAR,EAAoBZ,OAAO,CAACa,MAAR,CAAe,SAAf,CAApB;AAEAP,GAAG,CAACM,GAAJ,CAAQV,YAAY,EAApB;AAEAI,GAAG,CAACM,GAAJ,CAAQZ,OAAO,CAACgB,IAAR,EAAR;AACAV,GAAG,CAACM,GAAJ,CAAQZ,OAAO,CAACiB,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAnB,CAAR,E,CAEA;;AACAZ,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAaT,SAAb;AACAJ,GAAG,CAACa,GAAJ,CAAQ,QAAR,EAAkBR,WAAlB,EAA+B,CAACS,GAAD,EAAMC,GAAN,KAAc;AACzCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAAG,CAACG,MAAJ,CAAWC,IAAX,CAAgBC,GAArC;AACH,CAFD,E,CAIA;;AACApB,GAAG,CAACM,GAAJ,CAAQ,WAAR,EAAqBT,UAArB;AACAG,GAAG,CAACM,GAAJ,CAAQ,aAAR,EAAuBR,YAAvB,E,CAEA;;AACAE,GAAG,CAACqB,MAAJ,CAAWpB,QAAX,EAAqB,MACjBqB,OAAO,CAACC,GAAR,CAAa,kCAAiCtB,QAAS,EAAvD,CADJ","sourcesContent":["const express = require(\"express\");\r\nconst cookieParser = require('cookie-parser');\r\nconst userRoutes = require('./routes/user.routes');\r\nconst posterRoutes = require('./routes/poster.routes');\r\nconst path = require(\"path\");\r\nconst app = express();\r\nconst {APP_PORT} = process.env;\r\nconst {checkUser, requireAuth} = require('./middleware/auth.middleware');\r\nrequire('./config/db');\r\napp.use(express.static(path.resolve(__dirname, \"../../bin/client\")));\r\napp.use('/uploads', express.static('uploads'));\r\n\r\napp.use(cookieParser());\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended: true}));\r\n\r\n//jwt\r\napp.get('*', checkUser);\r\napp.get('/jwtid', requireAuth, (req, res) => {\r\n    res.status(200).send(res.locals.user._id);\r\n});\r\n\r\n//routes\r\napp.use('/api/user', userRoutes);\r\napp.use('/api/poster', posterRoutes);\r\n\r\n//server\r\napp.listen(APP_PORT, () =>\r\n    console.log(`ðŸš€ Server is listening on port ${APP_PORT}`),\r\n);\r\n"],"file":"server.js"}