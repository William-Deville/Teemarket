{"version":3,"sources":["../../../src/server/controllers/auth.controllers.js"],"names":["UserModel","require","jwt","signUpErrors","signInErrors","maxAge","createToken","id","sign","process","env","TOKEN_SECRET","expiresIn","module","exports","signUp","req","res","pseudo","email","password","body","user","create","status","json","_id","err","errors","send","signIn","login","token","cookie","httpOnly","logout","redirect"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,sBAAD,CAAzB;;AACA,MAAMC,GAAG,GAAID,OAAO,CAAC,cAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAiCH,OAAO,CAAC,uBAAD,CAA9C;;AAEA,MAAMI,MAAM,GAAG,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAlC;;AAEA,MAAMC,WAAW,GAAIC,EAAD,IAAQ;AACxB,SAAOL,GAAG,CAACM,IAAJ,CAAS;AAACD,IAAAA;AAAD,GAAT,EAAeE,OAAO,CAACC,GAAR,CAAYC,YAA3B,EAAyC;AAC5CC,IAAAA,SAAS,EAAEP;AADiC,GAAzC,CAAP;AAGH,CAJD;;AAMAQ,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACxC,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAA4BJ,GAAG,CAACK,IAAtC;;AACA,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMtB,SAAS,CAACuB,MAAV,CAAiB;AAACL,MAAAA,MAAD;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAjB,CAAnB;AACAH,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEH,MAAAA,IAAI,EAAEA,IAAI,CAACI;AAAb,KAArB;AACH,GAHD,CAIA,OAAMC,GAAN,EAAW;AACP,UAAMC,MAAM,GAAGzB,YAAY,CAACwB,GAAD,CAA3B;AACAV,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqB;AAAED,MAAAA;AAAF,KAArB;AACH;AACJ,CAVD;;AAYAf,MAAM,CAACC,OAAP,CAAegB,MAAf,GAAwB,OAAOd,GAAP,EAAYC,GAAZ,KAAoB;AACxC,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,GAAG,CAACK,IAAhC;;AAEA,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMtB,SAAS,CAAC+B,KAAV,CAAgBZ,KAAhB,EAAuBC,QAAvB,CAAnB;AACA,UAAMY,KAAK,GAAG1B,WAAW,CAACgB,IAAI,CAACI,GAAN,CAAzB;AACAT,IAAAA,GAAG,CAACgB,MAAJ,CAAW,KAAX,EAAkBD,KAAlB,EAAyB;AAAEE,MAAAA,QAAQ,EAAE,IAAZ;AAAkB7B,MAAAA;AAAlB,KAAzB;AACAY,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEH,MAAAA,IAAI,EAAEA,IAAI,CAACI;AAAb,KAArB;AACH,GALD,CAKE,OAAOC,GAAP,EAAW;AACT,UAAMC,MAAM,GAAGxB,YAAY,CAACuB,GAAD,CAA3B;AACAV,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,MAAAA;AAAF,KAArB;AACH;AACJ,CAZD;;AAcAf,MAAM,CAACC,OAAP,CAAeqB,MAAf,GAAwB,CAACnB,GAAD,EAAMC,GAAN,KAAc;AAClCA,EAAAA,GAAG,CAACgB,MAAJ,CAAW,KAAX,EAAkB,EAAlB,EAAsB;AAAC5B,IAAAA,MAAM,EAAE;AAAT,GAAtB;AACAY,EAAAA,GAAG,CAACmB,QAAJ,CAAa,GAAb;AACH,CAHD","sourcesContent":["const UserModel = require('../models/user.model');\r\nconst jwt  = require('jsonwebtoken');\r\nconst { signUpErrors, signInErrors } = require('../utils/errors.utils');\r\n\r\nconst maxAge = 3 * 24 * 60 * 60 * 1000;\r\n\r\nconst createToken = (id) => {\r\n    return jwt.sign({id}, process.env.TOKEN_SECRET, {\r\n        expiresIn: maxAge\r\n    })\r\n};\r\n\r\nmodule.exports.signUp = async (req, res) => {\r\n    const {pseudo, email, password} = req.body\r\n    try {\r\n        const user = await UserModel.create({pseudo, email, password});\r\n        res.status(201).json({ user: user._id});\r\n    }\r\n    catch(err) {\r\n        const errors = signUpErrors(err);\r\n        res.status(200).send({ errors })\r\n    }\r\n};\r\n\r\nmodule.exports.signIn = async (req, res) => {\r\n    const { email, password } = req.body\r\n\r\n    try {\r\n        const user = await UserModel.login(email, password);\r\n        const token = createToken(user._id);\r\n        res.cookie('jwt', token, { httpOnly: true, maxAge });\r\n        res.status(200).json({ user: user._id });\r\n    } catch (err){\r\n        const errors = signInErrors(err);\r\n        res.status(200).json({ errors });\r\n    }\r\n};\r\n\r\nmodule.exports.logout = (req, res) => {\r\n    res.cookie('jwt', '', {maxAge: 1});\r\n    res.redirect('/');\r\n}"],"file":"auth.controllers.js"}