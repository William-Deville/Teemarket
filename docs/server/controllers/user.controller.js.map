{"version":3,"sources":["../../../src/server/controllers/user.controller.js"],"names":["UserModel","require","ObjectId","Types","jwt","module","exports","getAllUsers","req","res","users","find","select","status","json","userInfo","console","log","params","isValid","id","send","findById","err","docs","updateUser","findOneAndUpdate","_id","$set","pseudo","body","email","password","new","upsert","setDefaultsOnInsert","message","deleteUser","remove","exec"],"mappings":"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","sourcesContent":["const UserModel = require('../models/user.model');\r\nconst ObjectId = require('mongoose').Types.ObjectId;\r\nconst jwt = require('jsonwebtoken');\r\n\r\nmodule.exports.getAllUsers = async (req, res) => {\r\n    const users = await UserModel.find().select('-password');\r\n    res.status(200).json(users);\r\n}\r\n\r\nmodule.exports.userInfo = (req, res) => {\r\n    console.log(req.params);\r\n    if(!ObjectId.isValid(req.params.id))\r\n        return res.status(400).send('ID unknow : ' + req.params.id)\r\n    \r\n    UserModel.findById(req.params.id, (err, docs) => {\r\n        if(!err) res.send(docs);\r\n        else console.log('ID unknow : ' + err);\r\n    }).select('-password');\r\n};\r\n\r\nmodule.exports.updateUser = async (req, res) => {\r\n    if(!ObjectId.isValid(req.params.id))\r\n        return res.status(400).send('ID unknow : ' + req.params.id)\r\n\r\n    try{\r\n        await UserModel.findOneAndUpdate(\r\n            {_id: req.params.id},\r\n            {\r\n                $set: {\r\n                    pseudo: req.body.pseudo,\r\n                    email: req.body.email,\r\n                    password: req.body.password\r\n                }\r\n            },\r\n            { new: true, upsert: true, setDefaultsOnInsert: true},\r\n            (err, docs) => {\r\n                if(!err) return res.send(docs);\r\n                if(err) return res.status(500).send({ message: err });\r\n            }\r\n        )\r\n    } catch (err){\r\n        return res.status(500).json({ message: err });\r\n    }\r\n};\r\n\r\nmodule.exports.deleteUser = async (req, res) => {\r\n    if(!ObjectId.isValid(req.params.id))\r\n        return res.status(400).send('ID unknow : ' + req.params.id)\r\n\r\n        try{\r\n            await UserModel.remove({ _id: req.params.id }).exec();\r\n            res.status(200).json({ message: 'Successfully deleted.'});\r\n        } catch (err) {\r\n            return res.status(500).json({ message: err });\r\n        }\r\n};\r\n\r\n//Ã  prÃ©parer pour la wishlist\r\n/*module.exports.follow = async (req, res) => {\r\n    if(!ObjectId.isValid(req.params.id) || !ObjectId.isValid(req.body.idToFollow))\r\n        return res.status(400).send('ID unknow : ' + req.params.id)\r\n\r\n    try {\r\n        //add to wishlist\r\n        await UserModel.findByIdAndUpdate(\r\n            req.params.id,\r\n            { $addToSet: { following: req.body.idToFollow }},\r\n            { new: true, upsert: true },\r\n            (err, docs) => {\r\n                if(!err) res.status(201).json(docs);\r\n                else return res.status(400).json(err);\r\n            }\r\n        )\r\n    } catch (err) {\r\n        return res.status(500).json({ message: err });\r\n    }\r\n}\r\n\r\nmodule.exports.unfollow = async (req, res) => {\r\n    if(!ObjectId.isValid(req.params.id) || !ObjectId.isValid(req.body.idToUnfollow))\r\n        return res.status(400).send('ID unknow : ' + req.params.id)\r\n\r\n    try {\r\n        //delete to wishlist\r\n        await UserModel.findByIdAndUpdate(\r\n            req.params.id,\r\n            { $pull: { following: req.body.idToUnfollow }},\r\n            { new: true, upsert: true },\r\n            (err, docs) => {\r\n                if(!err) res.status(201).json(docs);\r\n                else return res.status(400).json(err);\r\n            }\r\n        )\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({ message: err });\r\n    }\r\n}*/"],"file":"user.controller.js"}